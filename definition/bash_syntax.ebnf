(* TokenType 

Private keywords
    if
    endif
    while
    endwh
    for
    endfor
    print
    then
    else
    from
    to
    step

Bin_op
    + - / * %

Other
    :
    =
    (
    )

*)

(* SYNTAX *)

<instruction> =
    <ifstatement> |
    <whilestatement> |
    <forstatement> |
    <ident> "=" <expr> |
    "print" ":" <expr>
;

<listinstructions> =
    <instruction> |
    <instruction> <listinstructions>
;

<ifstatement> =
    "if" <expr> "then" <listinstructions> [ "else" <listinstructions> ] "endif"
;

<whilestatement> =
    "while" <expr> "then" <listinstructions> "endwh"
;

<ifstatement> =
    "for" <ident> "from" <expr> "to" <expr> [ "step" <number> ] "then" <listinstructions> "endfor"
;

<ident> =
    <alpha> [ <alphanum> ]
;

<expr> =
    <term> { ( "+" | "-" ) <term> }*
;

<term> =
    <factor> { ( "*" | "/" | "%" ) <factor> }* |
;

<factor> =
    <number> |
    "(" <expr> ")" |
    ( "-" ) <factor>
;

<number> =
    <digitList> [ "." [ <digitList> ] ] |
    "." [ <digitList> ] |
    <ident>
;

<digitList> =
    <digit> [ <digitList> ]
;

<digit> =
    "0" to "9"
;

<alpha> =
    "a" to "z" | "A" to "Z" | "_"
;

<alphanum> =
    <alpha> | <digit>
;